[{"/Users/bellloyd/Documents/She Codes/crowdfunding/src/index.js":"1","/Users/bellloyd/Documents/She Codes/crowdfunding/src/reportWebVitals.js":"2","/Users/bellloyd/Documents/She Codes/crowdfunding/src/App.js":"3","/Users/bellloyd/Documents/She Codes/crowdfunding/src/components/Nav/Nav.jsx":"4","/Users/bellloyd/Documents/She Codes/crowdfunding/src/pages/HomePage.jsx":"5","/Users/bellloyd/Documents/She Codes/crowdfunding/src/pages/DarePage.jsx":"6","/Users/bellloyd/Documents/She Codes/crowdfunding/src/data.js":"7","/Users/bellloyd/Documents/She Codes/crowdfunding/src/components/DareCard/DareCard.jsx":"8","/Users/bellloyd/Documents/She Codes/crowdfunding/src/components/LoginForm/LoginForm.jsx":"9","/Users/bellloyd/Documents/She Codes/crowdfunding/src/components/Tagline/Tagline.jsx":"10","/Users/bellloyd/Documents/She Codes/crowdfunding/src/components/Header/Header.jsx":"11","/Users/bellloyd/Documents/She Codes/crowdfunding/src/pages/SubmitDarePage.jsx":"12","/Users/bellloyd/Documents/She Codes/crowdfunding/src/components/SubmitDareForm/SubmitDare.jsx":"13","/Users/bellloyd/Documents/She Codes/crowdfunding/src/pages/AuthPage.jsx":"14","/Users/bellloyd/Documents/She Codes/crowdfunding/src/components/Footer/Footer.jsx":"15","/Users/bellloyd/Documents/She Codes/crowdfunding/src/components/DonateForm/DonateForm.jsx":"16","/Users/bellloyd/Documents/She Codes/crowdfunding/src/pages/DonatePage.jsx":"17"},{"size":500,"mtime":1634630151139,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":1634630151140,"results":"20","hashOfConfig":"19"},{"size":1068,"mtime":1636108766053,"results":"21","hashOfConfig":"19"},{"size":373,"mtime":1636108733055,"results":"22","hashOfConfig":"19"},{"size":629,"mtime":1635645519305,"results":"23","hashOfConfig":"19"},{"size":7559,"mtime":1636107846643,"results":"24","hashOfConfig":"19"},{"size":766,"mtime":1634809222707,"results":"25","hashOfConfig":"19"},{"size":495,"mtime":1635640395113,"results":"26","hashOfConfig":"19"},{"size":1890,"mtime":1635511656543,"results":"27","hashOfConfig":"19"},{"size":147,"mtime":1635254789824,"results":"28","hashOfConfig":"19"},{"size":402,"mtime":1635550786327,"results":"29","hashOfConfig":"19"},{"size":294,"mtime":1635512068009,"results":"30","hashOfConfig":"19"},{"size":4175,"mtime":1636081308256,"results":"31","hashOfConfig":"19"},{"size":958,"mtime":1635839615158,"results":"32","hashOfConfig":"19"},{"size":235,"mtime":1635645466563,"results":"33","hashOfConfig":"19"},{"size":2031,"mtime":1636108819480,"results":"34","hashOfConfig":"19"},{"size":285,"mtime":1636108851485,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1othgnk",{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/bellloyd/Documents/She Codes/crowdfunding/src/index.js",[],["79","80"],"/Users/bellloyd/Documents/She Codes/crowdfunding/src/reportWebVitals.js",[],"/Users/bellloyd/Documents/She Codes/crowdfunding/src/App.js",[],"/Users/bellloyd/Documents/She Codes/crowdfunding/src/components/Nav/Nav.jsx",[],"/Users/bellloyd/Documents/She Codes/crowdfunding/src/pages/HomePage.jsx",["81"],"import React, { useState, useEffect } from \"react\";\nimport { allDares } from \"../data\";\nimport DareCard from \"../components/DareCard/DareCard\";\n\nfunction HomePage() {\n    const [dareList, setDareList] = useState([]);\n\n    useEffect(() => {\n        fetch(`${process.env.REACT_APP_API_URL}dares`)\n        .then((results) => {\n        return results.json();\n        })\n        .then((data) => {\n        setDareList(data);\n        });\n    },[]);\n\n    return (\n    <div id=\"dares-list\">\n    {dareList.map((DareData, key) => {\n    return <DareCard key={key} daresData={DareData} />;\n    })}\n    </div>\n    );\n}\n\nexport default HomePage","/Users/bellloyd/Documents/She Codes/crowdfunding/src/pages/DarePage.jsx",["82","83","84"],"import React, { useState, useEffect } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\n\nconst DarePage = () => {\n    const [dareData, setDareData] = useState({dollars: [] });\n    const [isEditing, setIsEditing] = useState(false);\n    const { id: dare_id } = useParams();\n    console.log (dare_id)\n\n    useEffect(() => {\n        fetch(`${process.env.REACT_APP_API_URL}dares/${dare_id}/`)\n        .then((results) => {\n            return results.json();\n        })\n        .then((data) => {\n            setDareData(data);\n        });\n        \n    }, [dare_id]);\n    \n    const handleChange = (event) => {\n        const { id, value } = event.target\n        setDareData({\n            ...dareData,\n            [id]: value\n        })\n    }\n\n    const history = useHistory();\n\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n        \n        const response = await fetch(`\n        ${process.env.REACT_APP_API_URL}dares/${dare_id}/`, \n        {\n        method: \"put\",\n        headers: {\n            \"Authorization\": `Token ${localStorage.getItem('token')}`,\n            \"Content-Type\": \"application/json\",\n        }, \n        body: JSON.stringify({\n            id: dareData.id,\n            title: dareData.title,\n            rules: dareData.rules,\n            dare_description: dareData.dare_description,\n            image: dareData.image,\n            is_open: dareData.is_open,\n            goal: dareData.goal,\n            created_at: dareData.created_at,\n            updated_at: dareData.updated_at,\n            date_for_dare: dareData.date_for_dare,\n            for_charity: dareData.for_charity,\n            charity_url: dareData.charity_url,\n            owner: dareData.owner\n        }\n        ),\n    }\n    );\n\n    setIsEditing(false)\n}\n\n    const deleteDare = async () => {\n        await fetch(`${process.env.REACT_APP_API_URL}dares/${dare_id}`, {\n            method: \"delete\",\n            headers: {\n            \"Authorization\": `Token ${localStorage.getItem('token')}`\n            }\n        })\n        // Once we delete the project above, we then want to navigate back to the homepage\n        // since the project we are looking at, doesn't exist anymore\n        history.push('/')\n    }\n\n    const formattedDate = new Date(dareData?.created_at).toDateString()\n    \n    const ReadDare = () => {\n        return (\n            <div className=\"dare-info\">\n                <div className=\"dare\">\n                    <h2>{`${dareData.title}`}</h2>\n                    <h2>{`to support ${dareData.for_charity}`}</h2>\n                    <h3>What's the dare? </h3>\n                    <p>{dareData.dare_description}</p>\n                    <h3>Who's the dare care for?</h3>\n                    <p>{dareData.for_charity}</p>\n                    <h3>Check them out here.</h3>\n                    <a href={dareData.charity_url}>{dareData.for_charity}</a>\n                    <h3>Ok cool! What are the rules?</h3>\n                    <p>{dareData.rules}</p>\n                    <h3>Date for dare:</h3>\n                    <p>{formattedDate}</p>\n                    <h3>Dare still on?</h3>\n                    <p>{`It is ${dareData.is_open} that this dare is still on.`}</p>\n                    <h3>Dollars for Dare: </h3>\n                    <ul>\n                        {dareData.dollars.map((dollarsData, key) => {\n                            return(\n                                <li key={key}>\n                                    ${dollarsData.amount} donated kindly by     \n                                    {dollarsData.supporter} who wants to say\n                                    \"{dollarsData.comment}\"\n                                </li>\n                                );\n                        })}\n                    </ul>\n                </div>\n           </div>\n        )\n    }   \n\n    return (\n        <div class=\"dare-page\">\n            <h2>{dareData.title} to support {dareData.for_charity}</h2>\n            <img src={dareData.image }/>\n                { \n                    localStorage.getItem(\"token\") \n                    && isEditing == false\n                    && <button onClick={() => setIsEditing(true)}>Edit This Dare</button> \n                }\n                {\n                    localStorage.getItem('token')\n                    && <button onClick={deleteDare}>Delete This Dare</button>\n                }\n                <div>\n                    {\n                        isEditing\n                        ? (\n                            <form onSubmit={handleSubmit}>\n                                <div>   \n                                    <label htmlFor=\"title\">What's the dare title?</label>\n                                    <input\n                                        value={dareData.title}\n                                        type=\"text\"\n                                        id=\"title\"\n                                        placeholder=\"Title\"\n                                        onChange={handleChange}\n                                    />\n                                </div>\n                                <div>\n                                    <label htmlFor=\"rules\">What are the rules?</label>\n                                    <input\n                                        value={dareData.rules}\n                                        type=\"text\"\n                                        id=\"rules\"\n                                        placeholder=\"Rules\"\n                                        onChange={handleChange}\n                                    />\n                                </div>\n                                <div>\n                                    <label htmlFor=\"dare_description\">Please describe the dare:</label>\n                                    <input\n                                        value={dareData.dare_description}\n                                        type=\"text\"\n                                        id=\"dare_description\"\n                                        placeholder=\"Rules\"\n                                        onChange={handleChange}\n                                    />\n                                </div>\n                                <div>\n                                    <label htmlFor=\"is_open\">Dare still on?</label>\n                                    <input\n                                        value={dareData.is_open}\n                                        type=\"text\"\n                                        id=\"is_open\"\n                                        placeholder=\"Dare live?\"\n                                        onChange={handleChange}\n                                    />\n                                </div>\n                                <div>\n                                    <label htmlFor=\"image\">Enter Dare image URL</label>\n                                    <input\n                                        value={dareData.image}\n                                        type=\"url\"\n                                        id=\"image\"\n                                        placeholder=\"Image\"\n                                        onChange={handleChange}\n                                    />\n                                </div>\n                                <button type=\"submit\">Update Dare</button>\n                            </form>        \n                            )\n                            : <ReadDare />\n                        }\n            </div>\n        </div>\n    );\n}\n\nexport default DarePage\n","/Users/bellloyd/Documents/She Codes/crowdfunding/src/data.js",[],"/Users/bellloyd/Documents/She Codes/crowdfunding/src/components/DareCard/DareCard.jsx",["85"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./DareCard.css\";\n\nfunction DareCard (props) {\n    const { daresData } = props;\n    return (\n        <div className=\"dare-card\">\n            <Link to={`/dares/${daresData.id}`}>\n                <div class=\"card\">\n                    <img src={daresData.image }/>\n                    <div class=\"centered\">{daresData.title}</div>\n                </div>\n            </Link>\n        </div>\n    );\n}\n\nexport default DareCard","/Users/bellloyd/Documents/She Codes/crowdfunding/src/components/LoginForm/LoginForm.jsx",[],"/Users/bellloyd/Documents/She Codes/crowdfunding/src/components/Tagline/Tagline.jsx",["86"],"import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./Tagline.css\";\n\nfunction Tagline() {\n    const \n}\n",["87","88"],"/Users/bellloyd/Documents/She Codes/crowdfunding/src/components/Header/Header.jsx",["89"],"import React from \"react\";\nimport \"./Header.css\";\n\nfunction Header() {\n\n    return (\n        <div class=\"header\">\n            <a href=\"http://localhost:3000/\">\n                <img src=\"https://raw.githubusercontent.com/bel-lloyd/my-files/master/Fundare%20Logo%20(1).svg\"/>\n            </a>\n            <h3>Do a dare or fund a dare to show you care.</h3>\n        </div>\n    );\n}\n\nexport default Header;","/Users/bellloyd/Documents/She Codes/crowdfunding/src/pages/SubmitDarePage.jsx",[],"/Users/bellloyd/Documents/She Codes/crowdfunding/src/components/SubmitDareForm/SubmitDare.jsx",["90","91"],"import React, { useState } from \"react\";\nimport \"./SubmitDare.css\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction SubmitDare() {\n    const [dareData, setDareData] = useState({\n        is_open: true,\n        created_at: new Date(),\n        updated_at: new Date()\n    });\n    const history = useHistory();\n\n    const handleChange = (e) => {\n        let { id, value } = e.target;\n        setDareData((prevDareData) => ({\n            ...prevDareData,\n            [id]: value, \n        }));\n    };\n\n\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n\n        const dareToSubmit = dareData \n        dareToSubmit.date_for_dare = new Date(dareToSubmit.date_for_dare).toISOString()\n\n        const response = await fetch(\n            `${process.env.REACT_APP_API_URL}dares/`, \n            {\n            method: \"post\",\n            headers: {\n                \"Authorization\": `Token ${localStorage.getItem('token')}`,\n                \"Content-type\": \"application/json\",\n            },\n            body: JSON.stringify(dareToSubmit),\n            }\n        );\n    }\n\n    return (\n        <form>\n            <div class=\"label\">\n            <label htmlFor=\"title\">Title:</label>\n            <input \n                onChange={handleChange}\n                type=\"text\"\n                id=\"title\"\n                placeholder=\"Give your dare a title.\"\n                value={dareData.title}\n            />\n            </div>\n            <div class=\"label\">\n            <label htmlFor=\"dare_decription\">Dare Description:</label>\n            <input \n                onChange={handleChange}\n                type=\"text\"\n                id=\"dare_description\"\n                placeholder=\"Enter a description of your dare.\"\n                value={dareData.dare_description}\n            />\n            </div>\n            <div class=\"label\">\n            <label htmlFor=\"rules\">Dare Rules:</label>\n            <input\n                onChange={handleChange}\n                type=\"text\"\n                id=\"rules\"\n                placeholder=\"What are the rules of your dare?\"\n                value={dareData.rules}\n            />\n            </div>\n            <div class=\"label\">\n                <label htmlFor=\"goal\">Fundraising Goal?</label>\n                <input\n                onChange={handleChange}\n                type=\"text\"\n                id=\"goal\"\n                placeholder=\"How much do you want to raise?\"\n                value={dareData.goal}\n                />\n            </div>\n            <div class=\"label\">\n                <label htmlFor=\"image\">Enter URL for dare image:</label>\n                <input\n                onChange={handleChange}\n                type=\"url\"\n                id=\"image\"\n                placeholder=\"Enter URL for image\"\n                value={dareData.image}\n                />\n            </div>\n            <div class=\"label\">\n                <label htmlFor=\"date_for_dare\">What date?</label>\n                <input\n                onChange={handleChange}\n                type=\"date\"\n                id=\"date_for_dare\"\n                placeholder=\"When will you complete your dare?\"\n                value={dareData.date_for_dare}\n                />\n            </div>\n            <div class=\"label\">\n                <label htmlFor=\"for_charity\">Which charity will your dare support?</label>\n                <input\n                onChange={handleChange}\n                type=\"text\"\n                id=\"for_charity\"\n                placeholder=\"What's the name of the charity you are supporting?\"\n                value={dareData.for_charity}\n                />\n            </div>\n            <div class=\"label\">\n                <label htmlFor=\"charity_url\">URL for charity website?</label>\n                <input\n                onChange={handleChange}\n                type=\"url\"\n                id=\"charity_url\"\n                placeholder=\"Enter the URL for your charities website.\"\n                value={dareData.charity_url}\n                />\n            </div>\n            <button onClick={handleSubmit} type=\"submit\">\n            Submit Dare!\n            </button>\n        </form>\n    );\n}\n\nexport default SubmitDare","/Users/bellloyd/Documents/She Codes/crowdfunding/src/pages/AuthPage.jsx",[],"/Users/bellloyd/Documents/She Codes/crowdfunding/src/components/Footer/Footer.jsx",[],"/Users/bellloyd/Documents/She Codes/crowdfunding/src/components/DonateForm/DonateForm.jsx",["92","93"],"import React, { useState } from \"react\";\nimport \"./DonateForm.css\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction DonateDollars() {\n    const [dollarsData, setDollarsData] = useState({});\n    const history = useHistory();\n\n    const handleChange = (e) => {\n        let { id, value } = e.target;\n        setDollarsData((prevDollarsData) => ({\n            ...prevDollarsData,\n            [id]: value, \n        }));\n    };\n\n\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n\n        const response = await fetch(\n            `${process.env.REACT_APP_API_URL}dollars/`, \n            {\n            method: \"post\",\n            headers: {\n                \"Authorization\": `Token ${localStorage.getItem('token')}`,\n                \"Content-type\": \"application/json\",\n            },\n            body: JSON.stringify(dollarsData),\n            }\n        );\n    }\n\n    return (\n        <form>\n            <div class=\"label\">\n            <label htmlFor=\"amount\">Dollars you'd like to donate:</label>\n            <input \n                onChange={handleChange}\n                type=\"number\"\n                id=\"amount\"\n                value={dollarsData.amount}\n            />\n            </div>\n            <div class=\"label\">\n            <label htmlFor=\"comment\">Please leave a comment:</label>\n            <input \n                onChange={handleChange}\n                type=\"text\"\n                id=\"comment\"\n                placeholder=\"Enter some words of encouragement\"\n                value={dollarsData.comment}\n            />\n            </div>\n            <div class=\"label\">\n            <label htmlFor=\"anonymous\">Remain Anonymous?</label>\n            <input\n                onChange={handleChange}\n                type=\"boolean\"\n                id=\"anonymous\"\n                value={dollarsData.anonymous}\n            />\n            </div>\n            <button onClick={handleSubmit} type=\"submit\">\n            Submit Dollars!\n            </button>\n        </form>\n    );\n}\n\nexport default DonateDollars","/Users/bellloyd/Documents/She Codes/crowdfunding/src/pages/DonatePage.jsx",[],{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","severity":1,"message":"99","line":2,"column":10,"nodeType":"100","messageId":"101","endLine":2,"endColumn":18},{"ruleId":"98","severity":1,"message":"102","line":34,"column":15,"nodeType":"100","messageId":"101","endLine":34,"endColumn":23},{"ruleId":"103","severity":1,"message":"104","line":116,"column":13,"nodeType":"105","endLine":116,"endColumn":41},{"ruleId":"106","severity":1,"message":"107","line":119,"column":34,"nodeType":"108","messageId":"109","endLine":119,"endColumn":36},{"ruleId":"103","severity":1,"message":"104","line":11,"column":21,"nodeType":"105","endLine":11,"endColumn":50},{"ruleId":null,"fatal":true,"severity":2,"message":"110","line":7,"column":1},{"ruleId":"94","replacedBy":"111"},{"ruleId":"96","replacedBy":"112"},{"ruleId":"103","severity":1,"message":"104","line":9,"column":17,"nodeType":"105","endLine":9,"endColumn":114},{"ruleId":"98","severity":1,"message":"113","line":11,"column":11,"nodeType":"100","messageId":"101","endLine":11,"endColumn":18},{"ruleId":"98","severity":1,"message":"102","line":28,"column":15,"nodeType":"100","messageId":"101","endLine":28,"endColumn":23},{"ruleId":"98","severity":1,"message":"113","line":7,"column":11,"nodeType":"100","messageId":"101","endLine":7,"endColumn":18},{"ruleId":"98","severity":1,"message":"102","line":21,"column":15,"nodeType":"100","messageId":"101","endLine":21,"endColumn":23},"no-native-reassign",["114"],"no-negated-in-lhs",["115"],"no-unused-vars","'allDares' is defined but never used.","Identifier","unusedVar","'response' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 5 |\u001b[39m \u001b[36mfunction\u001b[39m \u001b[33mTagline\u001b[39m() {\u001b[0m\n\u001b[0m \u001b[90m 6 |\u001b[39m     \u001b[36mconst\u001b[39m \u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 7 |\u001b[39m }\u001b[0m\n\u001b[0m \u001b[90m   |\u001b[39m \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 8 |\u001b[39m\u001b[0m",["114"],["115"],"'history' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]